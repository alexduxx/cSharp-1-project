@model ReExamAppV2._3.Models.Experience

@{
    ViewBag.Title = "SetAchievement";
}

<h2>SetAchievement</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Experience</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <h6>@ViewBag.UserName</h6>
                @Html.Hidden("UserId", null, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.UserId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyRoleId, "Role Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <h6>@ViewBag.RoleName</h6>
                @Html.Hidden("CompanyRoleId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyRoleId, "", new { @class = "text-danger" })
            </div>
        </div>
       

        <div class="form-group">
            @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Level", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YearsOfExperience, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearsOfExperience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearsOfExperience, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
